name: Build and minimal test

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      # Please read the documentation on
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      # before making changes to this step.
      uses: actions/cache@v2
      with:
        # Cache installed Python packages instead of the pip download cache.
        path: ${{ env.pythonLocation }}/lib/python${{ matrix.python-version }}/site-packages
        # Look to see if there is a cache hit for the corresponding setup.py.
        key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('setup.py') }}
        # Try the cache with a different setup.py.
        restore-keys: ${{ runner.os }}-py${{ matrix.python-version }}-pip-
    - name: Install dependencies
      # Use `install -e` for local fedjax to prevent actual fedjax files from
      # being packaged into cache.
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e .
        pip install -r docs/requirements.txt
        pip install -r requirements-test.txt
    # # TODO(b/191778948): Reselect once we understand absl flags and pytest.
    # - name: Test
    #   run: |
    #     pytest -n auto -q \
    #       -k "not SubsetFederatedDataTest and not SQLiteFederatedDataTest and not ForEachClientPmapTest and not DownloadsTest and not CheckpointTest and not LoggingTest" \
    #       fedjax --ignore=fedjax/legacy/
    # - name: Build documentation
    #   run: |
    #     sphinx-build -M html docs docs/_build
